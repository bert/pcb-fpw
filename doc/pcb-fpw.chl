//////////////////////////////////////////////////////////////////////////////
//
// ConTEXT highlighter definition file.
//
// pcb-fpw footprint wizard files highlighter written by Bert Timmerman <bert.timmerman@xs4all.nl>
//
// pcb-fpw can be found at: http://ljh4timm.home.xs4all.nl/pcb-fpw/pcb-fpw.html
//
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// language name

Language:               pcb-fpw footprintwizard files

//////////////////////////////////////////////////////////////////////////////
// put whatever you want here, short description, author name, email address..

Description:            pcb-fpw footprintwizard files highlighter written by Bert Timmerman <bert.timmerman@xs4all.nl>

//////////////////////////////////////////////////////////////////////////////
// default file filter
// note: if more than one extension is associated, eg:
// C/C++ files (*.c,*.cpp,*.h,*.hpp)|*.c;*.cpp;*.h;*.hpp

Filter:                 pcb-fpw files (*.fpw)|*.fpw


//////////////////////////////////////////////////////////////////////////////
// help file which will be invoked when F1 is pressed

HelpFile:


//////////////////////////////////////////////////////////////////////////////
// language case sensitivity
// 0  - no
// 1  - yes

CaseSensitive:          1


//////////////////////////////////////////////////////////////////////////////
// comment type: LineComment - comment to the EOL
// BlockCommentBeg - block comment begin, it could be
// multiline
// BlockCommentEnd - block comment end
//
// if there is more than one definition of line/beg/end comment string,
// you can separate it with spaces.
// for example, for pascal it would be:
//   LineComment:       //
//   BlockCommentBeg:   (* {
//   BlockCommentEnd:   *) }

LineComment:            #
BlockCommentBeg:
BlockCommentEnd:


//////////////////////////////////////////////////////////////////////////////
// identifier characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char

IdentifierBegChars:        a..z A..Z _%@?&$
IdentifierChars:           a..z A..Z _ 0..9 ?&%$@:

//////////////////////////////////////////////////////////////////////////////
// numeric constants begin characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstBegChars:       0..9


//////////////////////////////////////////////////////////////////////////////
// numeric constants characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstChars:          0..9 .


//////////////////////////////////////////////////////////////////////////////
// escape character

EscapeChar:


//////////////////////////////////////////////////////////////////////////////
// keyword table
// note: delimited with spaces, lines could be wrapped
// you may divide keywords into five groups which can be
// highlighted differently

KeyWords1: // keywords
        footprint_filename
        footprint_type
        footprint_units
        footprint_refdes
        footprint_value
        package_body_length
        package_body_width
        package_body_height
        package_is_radial
        footprint_author
        footprint_dist_license
        footprint_use_license
        footprint_status
        attributes_in_footprint
        number_of_pins
        number_of_columns
        number_of_rows
        pitch_x
        pitch_y
        count_x
        count_y
        pad_shape
        pin_pad_exceptions_string
        pin_1_position
        pad_length
        pad_width
        pad_diameter
        pin_drill_diameter
        pin1_square // --> pad_1_square
        pad_clearance
        pad_solder_mask_clearance
        thermal // --> thermal_pad
        thermal_nopaste // --> thermal_pad_nopaste
        thermal_length // --> thermal_pad_length
        thermal_width // --> thermal_pad_width
        thermal_clearance // --> thermal_pad_clearance
        thermal_solder_mask_clearance // --> thermal_pad_solder_mask_clearance
        fiducial
        fiducial_pad_diameter
        fiducial_pad_solder_mask_clearance
        silkscreen_package_outline
        silkscreen_indicate_1
        silkscreen_line_width
        courtyard
        courtyard_length
        courtyard_width
        courtyard_line_width
        courtyard_clearance_with_package
        c1
        g1
        z1
        c2
        g2
        z2

KeyWords2: // keyword values
// footprint types
        NO_PACKAGE //For those living in the void.
        BGA // Ball gate array package.
        CAPAE // Capacitor, aluminium electrolytic package.
        CAPC // Capacitor, chip package.
        CAPM // Capacitor, molded, non-polarized package.
        CAPMP // Capacitor, molded, polarized package.
        CON_DIL // Connector package dual inline package numbering scheme.
        CON_DIP // Connector package with dual inline numbering scheme.
        CON_HDR // Connector package with header numbering scheme.
        DIL // Dual inline package.
        DIOM // Diode, molded package.
        DIOMELF // Diode, MELF package.
        DIP // Dual inline package.
        DO // Diode outline package.
        INDC // Inductor, chip package.
        INDM // Inductor, molded package.
        INDP // Inductor, precision wire wound package.
        PGA // Pin gate array package.
        PLCC // Plastic leadless chip carrier package.
        QFN // Quad flat no-leads package.
        QFP // Quad flat package.
        RES // Resistor TH technology package.
        RESC // Resistor, chip package.
        RESM // Resistor, molded package.
        RESMELF // Resistor, MELF package.
        SIL // Single inline package.
        SIP // Single inline package.
        SO // Small outline package.
        SOT // Small outline transistor package.
        TO // Transistor outline package.
        TO92 // Transistor outline package.
        TO220 // Transistor outline package.
// footprint units
        NO_UNITS // For those living in the void.
        MIL // Imperial units type (Imperial standard "inch" divided by 1,000).
        MIL_100 // Imperial units type (Imperial standard "inch" divided by 100,000).
        MM // Metric units type (Metric standard "meter" divided by 1,000).
// Boolean
        TRUE
        FALSE
// footprint distribution licenses
        GPL // GNU Public License
        GFDL // GNU Free Documentation License
        CC-BY // Creative Commons Attribution (alone)
        cc-by // Creative Commons Attribution (alone)
        CC-BY-NC // Creative Commons Attribution + NonCommercial
        cc-by-nc // Creative Commons Attribution + NonCommercial
        CC-BY-NC-ND // Creative Commons Attribution + NonCommercial + NoDerivatives
        cc-by-nc-nd // Creative Commons Attribution + NonCommercial + NoDerivatives
        CC-BY-NC-SA // Creative Commons Attribution + NonCommercial + ShareAlike
        cc-by-nc-sa // Creative Commons Attribution + NonCommercial + ShareAlike
        CC-BY-ND // Creative Commons Attribution + NoDerivatives
        cc-by-nd // Creative Commons Attribution + NoDerivatives
        CC-BY-SA // Creative Commons Attribution + ShareAlike
        cc-by-sa // Creative Commons Attribution + ShareAlike
// footprint usage license
        unlimited
// footprint status
        NO_STATUS // For those living in the void.
        EXPERIMENTAL // Experimental.
        PRIVATE // Private (not published).
        PUBLIC // Public (released).
        STABLE // Stable (confirmed by peers or by usage in an actual pcb).
// pad shapes
        NO_SHAPE,
        ROUND,
        SQUARE,
        OCTAGONAL,
        ROUND_ELONGATED
// pin/pad #1 position
        NO_LOCATION // For those living in the void.
        UPPER_LEFT // Package has the upper left pin as pin #1.
        MIDDLE_LEFT // Package has the middle left pin as pin #1.
        LOWER_LEFT // Package has the lower left pin as pin #1.
        UPPER_MIDDLE // Package has the upper middle pin as pin #1.
        MIDDLE_MIDDLE // Package has the middle middle pin as pin #1.
        LOWER_MIDDLE // Package has the lower middle pin as pin #1.
        UPPER_RIGHT // Package has the upper right pin as pin #1.
        MIDDLE_RIGHT // Package has the middle right pin as pin #1.
        LOWER_RIGHT // Package has the lower right pin as pin #1.
        LEFT_TOP // Package has the left topside pin as pin #1.
        RIGHT_TOP // Package has the right topside pin as pin #1.
        LEFT_BOTTOM // Package has the left bottomside pin as pin #1.
        RIGHT_BOTTOM // Package has the right bottomside pin as pin #1.

KeyWords3: // most common flags


KeyWords4: // special names
        PCB
        gEDA

KeyWords5: // common and not so common names


//////////////////////////////////////////////////////////////////////////////
// string delimiter: StringBegChar - string begin char
// StringEndChar - string end char
// MultilineStrings - enables multiline strings, as perl
// has it

StringBegChar:          " '
StringEndChar:          " '
MultilineStrings:       0


//////////////////////////////////////////////////////////////////////////////
// use preprocessor:
// 0 - no
// 1 - yes
// note: if yes, '#' and statements after it will be
// highlighted with Preprocessor defined colors

UsePreprocessor:        0


//////////////////////////////////////////////////////////////////////////////
// highlight line:
// 0 - no
// 1 - yes
// note: if yes, current line will be highlighted

CurrLineHighlighted:    0


//////////////////////////////////////////////////////////////////////////////
// colors
// note:                first value is foreground, second is background color
//                      and third (optional) represents font attribute:
//                      B - bold
//                      I - italic
//                      U - underline
//                      S - strike out
//                      attributes can be combined: eg. B or BI
//                      as value, it could be used any standard windows color:
//                      clBlack, clMaroon, clGreen, clOlive, clNavy,
//                      clPurple, clTeal, clGray, clSilver, clRed, clLime,
//                      clYellow, clBlue, clFuchsia, clAqua, clLtGray,
//                      clDkGray, clWhite, clScrollBar, clBackground,
//                      clActiveCaption, clInactiveCaption, clMenu, clWindow,
//                      clWindowFrame, clMenuText, clWindowText, clCaptionText,
//                      clActiveBorder, clInactiveBorder, clAppWorkSpace,
//                      clHighlight, clHighlightText, clBtnFace, clBtnShadow,
//                      clGrayText, clBtnText, clInactiveCaptionText,
//                      clBtnHighlight, cl3DDkShadow, cl3DLight, clInfoText,
//                      clInfoBk
//                      as value, it could be used hex numeric constant too:
//                      $BBGGRR - BB: blue, GG: green, RR: red, eg: $FF6A00

SpaceCol:               clWindowText clWindow
Keyword1Col:            clNavy clWindow B
Keyword2Col:            clBlue clWindow B
Keyword3Col:            clPurple clWindow BS
Keyword4Col:            clNavy clWindow I
Keyword5Col:            clBlue clWindow I
IdentifierCol:          clWindowText clWindow
CommentCol:             clGray clWindow
NumberCol:              clRed clWindow
StringCol:              clMaroon clWindow
SymbolCol:              clGray clWindow
PreprocessorCol:        clBlue clWindow
SelectionCol:           clWhite clNavy
CurrentLineCol:         clBlack clYellow

